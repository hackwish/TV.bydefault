#basado en https://github.com/puppetlabs/puppet-in-docker-examples/blob/master/compose/docker-compose.yml

version: '3'

services:
   db:
     image: mysql:5.7
     # volumes:
     #   - db_data:/var/lib/mysql
     ports:
       - "3306:3306"
     restart: always
     environment:
       MYSQL_ROOT_PASSWORD: somewordpress
       MYSQL_DATABASE: wordpress
       MYSQL_USER: wordpress
       MYSQL_PASSWORD: wordpress

   wordpress:
     depends_on:
       - db
     image: wordpress:latest
     # ports:
     #   - "8000:80"
     restart: always
     environment:
       WORDPRESS_DB_HOST: db:3306
       WORDPRESS_DB_USER: wordpress
       WORDPRESS_DB_PASSWORD: wordpress
     links:
      - db:db.local
     labels:
      - "traefik.frontend.rule=Host:wordpress.docker.localhost"
      - 'traefik.port=80'

   # varnish:
   #   depends_on:
   #     - wordpress
   #   image: wodby/wordpress-varnish:latest
   #   ports:
   #     - "6081:6081"
   #     - "6082:6082"
   #   environment:
   #     VARNISH_SECRET: secret
   #     VARNISH_BACKEND_HOST: wordpress
   #     VARNISH_BACKEND_PORT: 80
   #     VARNISH_PURGE_KEY: key
   #     CACHE_SIZE: 64m
   #     VARNISHD_PARAMS: -p default_ttl=3600 -p default_grace=3600
   #   # links:
   #   #  - wordpress:wordpress.local
   #   labels:
   #     - 'traefik.backend=varnish'
   #     - 'traefik.port=6081'
   #     - 'traefik.frontend.rule=Host:varnish'

   traefik:
     image: traefik # The official Traefik docker image
     command: --api --docker # Enables the web UI and tells Tr√¶fik to listen to docker
     ports:
      - "8000:80"     # The HTTP port
      - "8080:8080" # The Web UI (enabled by --api)
     volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events

# volumes:
#     db_data:
#     
#     